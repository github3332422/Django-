"""
Django settings for dj02 project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# 创建基础目录
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# 一个内置的随机生成的加密串
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a@_5y^m))+388(hg8y@kl6c029srm+fqkh0r*s=9e2=#32kh*8'

# 调试模式,显示报错信息
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 允许访问的ip   *是允许所有主机    127.0.0.1 只允许当前服务器访问
ALLOWED_HOSTS = ['*']


# Application definition
# 把新建的APP装入
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',#允许跨域第二部  跨域APP
    'api',
    'shop',
]

# 中间件
MIDDLEWARE = [
    # 内置安全机制 保护用户与网站通信的安全
    'django.middleware.security.SecurityMiddleware',
    # 会话session 功能
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 允许跨域第二部
    'corsheaders.middleware.CorsMiddleware',

    # 处理请求信息 规范化请求内容
    'django.middleware.common.CommonMiddleware',
    # 开启Csrf保护
    'django.middleware.csrf.CsrfViewMiddleware',
    # 开启用户认证系统
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 开启用户内置信息提示
    'django.contrib.messages.middleware.MessageMiddleware',
    # 防止程序恶意点击执行
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 跟路由
ROOT_URLCONF = 'dj02.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'api/templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# 项目启动文件
WSGI_APPLICATION = 'dj02.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'db_django',
#         'USER': 'root',
#         'PASSWORD': 'admin',
#         'HOST': '127.0.0.1',
#         'PORT': 3306,
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',# 引擎
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
# 加密算法
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
# 文体'en-us' 英文
LANGUAGE_CODE = 'zh-hans'

# 时区 'UTC'0时间那个线
TIME_ZONE = 'Asia/Shanghai'

# 国际化
USE_I18N = True

# 日志
USE_L10N = True

# Time Zone功能，则所有的存储和内部处理，甚至包括直接print显示全都是UTC的。只有通过模板进行表单输入/渲染输出的时候，才会执行UTC本地时间的转换。
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"static")
]

# 允许跨域第三部
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://127.0.0.1:8000',
)
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)